name: Multi-Stage Pipeline 1

on:
  push:
    branches:
      - main
  pull_request:
    branches:  
      - main 
 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build
      run: |
        mvn clean install
        mvn clean package
        
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: target/
    
  
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    #- name: Set up Vault CLI
    #  run: |
    #    VAULT_VERSION="1.8.1"  # Replace with the desired version
    #    curl -fsSL -o vault.zip https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
    #    unzip vault.zip
    #    sudo mv vault /usr/local/bin/
    #    vault --version  # Check that Vault is installe
  
    #- name: Retrieve secret from Vault
    #  run: |
    #    export VAULT_ADDR=http://127.0.0.1:8200
    #    export VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}
    #    export SECRET_VALUE=$(vault kv get -mount="secret" "MYSECRET")
    #    echo "Secret value: $SECRET_VALUE"
    #    echo "VAULT_SECRET=$SECRET_VALUE" >> $GITHUB_ENV"""



    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: main
        token: ${{ secrets.NEW_GIT_SECRET}}

    - name: Set up Git
      run: |
        git config user.email "rakshithamayya6@gmail.com"
        git config user.name "rakshitha-mayya"
        echo "machine github.com login $GITHUB_ACTOR password $GITHUB_TOKEN" > ~/.netrc
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install
    
    - name: Get current version
      id: get_version
      run: |
        VERSION=$(git describe --tags --abbrev=0)
        VERSION=${VERSION:-"v0.0.0"}
        echo "::set-output name=version::$VERSION"

    - name: Increment version
      id: bump_version
      run: |
        # Custom logic to increment version (replace with your own logic)
        CURRENT_VERSION=${{ steps.get_version.outputs.version }}
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++; print}')
        echo "::set-output name=new_version::$NEW_VERSION"

    - name: Bump version and create release
      run: |
        git tag -a ${{ steps.bump_version.outputs.new_version }} -m "Release ${{ steps.bump_version.outputs.new_version }}"
        git push origin ${{ steps.bump_version.outputs.new_version }}
        gh release create ${{ steps.bump_version.outputs.new_version }} -t "Release ${{ steps.bump_version.outputs.new_version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.NEW_GIT_TOKEN }}

    #- name: Bump version and create release
    #  run: |
    #    # Update your versioning logic here (if needed)
    #    git tag -a v1.2.3 -m "Release v1.2.3"
    #    git push origin v1.2.3
    #    gh release create v1.2.3 -t "Release v1.2.3"
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.NEW_GIT_SECRET }}

  deploy_dev:
    runs-on: ubuntu-latest
    environment: 'dev'
    needs: release

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to Dev
      run: echo "Deploying to Dev environment"

  deploy_qa:
    runs-on: ubuntu-latest
    environment: 'QA'
    needs: deploy_dev

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to QA
      run: echo "Deploying to QA environment"

  deploy_prod:
    runs-on: ubuntu-latest
    environment: 'Prod'
    needs: deploy_qa

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to Prod
      run: echo "Deploying to Prod environment"

 
 
