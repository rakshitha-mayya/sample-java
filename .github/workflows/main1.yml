name: Multi-Stage Pipeline 1

on:
  push:
    branches:
      - main
  pull_request:
    branches:  
      - main 
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build
      run: |
        mvn clean install
        mvn clean package
        
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: target/
    
  
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: main
        token: ${{ secrets.NEW_GIT_SECRET}}

    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Set Release Version
      run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

    - name: Tag Release
      run: |
        git config --global user.email "rakshithamayya6@gmail.com"
        git config --global user.name "rakshitha-mayya"
        git tag $RELEASE_VERSION
        git push origin $RELEASE_VERSION
    
    - name: Release
      run: echo "Release"
  
  deploy_dev:
    runs-on: ubuntu-latest
    environment: 'dev'
    needs: release

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to Dev
      run: echo "Deploying to Dev environment"

  deploy_qa:
    runs-on: ubuntu-latest
    environment: 'QA'
    needs: deploy_dev

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to QA
      run: echo "Deploying to QA environment"

  deploy_prod:
    runs-on: ubuntu-latest
    environment: 'Prod'
    needs: deploy_qa

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to Prod
      run: echo "Deploying to Prod environment"

 
  approval:
    runs-on: ubuntu-latest
    needs: deploy_qa
    
    steps:
      - name: Check if Approval is Needed
        run: echo "Check if approval is needed based on your criteria"

      - name: Manual Approval
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.NEW_GIT_TOKEN }}
          script: |
            const { data: approvals } = await github.request("GET /repos/:owner/:repo/actions/runs/:run_id/reviews", {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });

            const approvalNeeded = approvals.every(review => review.state !== 'APPROVED');

            if (approvalNeeded) {
              console.log("Approve the deployment.");
              process.exit(1);
            } else {
              console.log("Deployment approved.");
            }
